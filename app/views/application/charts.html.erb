<% provide(:title, 'Charts') %>
<% content_for :head do %>
    <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
    <%= javascript_include_tag 'application', 'data-turbolinks-track' => true %>
<% end %>

<div class="row">
  <div class="col-lg-6">
    <div class="input-group">
      <input type="text" id="game_name" autocomplete="off" class="form-control" placeholder="Enter game to show stats for">
      <span class="input-group-btn">
        <button class="btn btn-default" type="button" onclick="changeChart()">Update</button>
      </span>
    </div>
  </div>
</div>

<div id="autocomplete" style="margin-top: 5px;">

</div>

<div style="width:100%">
  <div>
    <canvas id="canvas"></canvas>
  </div>
</div>

<script>
    var ENTER_KEY = 13;

    var games = ["League of Legends", "Counter-Strike: Global Offensive",
        "Dota 2", "Hearthstone: Heroes of Warcraft", "Super Mario Maker",
        "Destiny", "H1Z1", "StarCraft II", "Diablo III: Reaper of Souls",
        "World of Warcraft", "World of Tanks", "Soma", "Minecraft"];

    function changeChart() {
        name = $('#game_name').val();
        name = name.replace(/ /g, "%20");
        var url = getRootUrl() + 'charts/total/hourly/' + name;
        makeChart(url);
    }

    function makeChart(url) {
        console.log("getting data");
        $.ajax(url, {
            success: function(data) {
                var lineChartData = {
                    labels : data["timestamps"],
                    datasets : [
                        {
                            label: "viewers",
                            fillColor : "rgba(151,187,205,0.2)",
                            strokeColor : "rgba(151,187,205,1)",
                            pointColor : "rgba(151,187,205,1)",
                            pointStrokeColor : "#fff",
                            pointHighlightFill : "#fff",
                            pointHighlightStroke : "rgba(151,187,205,1)",
                            data : data["viewers"]
                        }
                    ]
                };

                var ctx = $("#canvas")[0].getContext("2d");
                ctx.width = document.body.clientWidth;
                ctx.height = document.body.clientHeight;
                myLine = new Chart(ctx).Line(lineChartData, {
                    responsive: true,
                    showXLabels: data["timestamps"].length / 12
                });
            },
            error: function() {
                console.log('error');
            }
        });
    }

    function getRootUrl() {
        var rootUrl = '';
        if (window.location.origin)
            rootUrl = window.location.origin + '/';
        else
            rootUrl = window.location.protocol + '//' + window.location.host + '/';

        return rootUrl;
    }

    function showSuggestions(text) {
        if(text == '') {
            $('#autocomplete').empty();
            return;
        }


        $('#autocomplete').empty();
        matches = [];
        for (var i = 0; i < games.length; i++) {
            // game starts with text
            if (new RegExp('^' + text.toLowerCase()).test(games[i].toLowerCase())) {
                matches.push(games[i]);
                $('#autocomplete').append('<div class="autocomplete_item btn btn-sm btn-primary" style="margin-right: 5px" onclick="addTextToInput(this)">' + games[i] + '</div>');
            }
        }
    }

    function addTextToInput(item) {
        $('#game_name').val(item.innerHTML);
        $('#autocomplete').empty();
        changeChart();
    }

    $(document).ready(function(){
        console.log("ready");
        var url = getRootUrl() + 'charts/total/hourly';
        makeChart(url);

        $('#game_name').keyup(function(e){
            if (e.keyCode == ENTER_KEY)
                changeChart();
            else
                showSuggestions($('#game_name').val());
        })
    });
</script>
